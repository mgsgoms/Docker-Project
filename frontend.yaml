apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: frontend
    run: frontend
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
   metadata:
    labels:
      app: frontend
   spec:
    containers:
    - image: muthubharathi740/flask:${BUILD_NUMBER}
      name: frontend

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 1
  labels:
    app: backend
    run: backend
  name: backend
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: backend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
     metadata:
        labels:
          run: backend
     spec:
        containers:
        - image: muthubharathi740/mysql:${BUILD_NUMBER}
          imagePullPolicy: IfNotPresent
          args: ["--default-authentication-plugin=mysql_native_password"]
          name: backend
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: frontend
  name: frontend
  namespace: default
spec:
  ports:
  - nodePort: 32333
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: frontend
  sessionAffinity: None
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: backend
  name: backend
  namespace: default
spec:
  ports:
  - port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    run: backend
  sessionAffinity: None
  type: ClusterIP
